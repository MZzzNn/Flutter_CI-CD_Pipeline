name: CI/CD Build APK and Upload to Drive and Send Link to Telegram Channel and Send to Gmail Account

on:
  push:
    branches:
      - master
      - test

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  # TODO: Here You Can Delete Old APK, IPA, AAB, etc...
  delete-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          expire-in: 0days


  # TODO: Here You Can Get Info About Branch, Project, Commit Author, etc...
  Get_Info:
    name: Get Info
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.branch_name.outputs.branch_name }}
      project_name: ${{ steps.project_name.outputs.project_name }}
      commit_author: ${{ steps.commit_author.outputs.commit_author }}
      commit_author_email: ${{ steps.commit_author_email.outputs.commit_author_email }}
      date_time: ${{ steps.date_time.outputs.date_time }}
      date_url: ${{ steps.date_url.outputs.date_url }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Branch Name
        id: branch_name
        run: echo branch_name=${GITHUB_REF#refs/heads/} >> $GITHUB_OUTPUT


      - name: Get Project Name
        id: project_name
        run: echo project_name=${GITHUB_REPOSITORY#*/} >> $GITHUB_OUTPUT


      - name: Get Commit Author
        id: commit_author
        run: echo commit_author=$(git log -1 --pretty=%an) >> $GITHUB_OUTPUT


      - name: Get Commit Author Email
        id: commit_author_email
        run: echo commit_author_email=$(git log -1 --pretty=%ae) >> $GITHUB_OUTPUT


      - name: Get Commit Formatted Date
        id: date_time
        run: echo date_time=$(git log -1 --pretty=%cd --date=format:'%B %d, %Y %I:%M %p') >> $GITHUB_OUTPUT

      - name: Get Commit Date For Url
        id: date_url
        run: echo date_url=$(git log -1 --pretty=%cd --date=format:'%Y-%m-%d') >> $GITHUB_OUTPUT

      - name: echo
        run: |
          echo ${{ steps.branch_name.outputs.branch_name }}
          echo ${{ steps.project_name.outputs.project_name }}
          echo ${{ steps.commit_author.outputs.commit_author }}
          echo ${{ steps.commit_author_email.outputs.commit_author_email }}
          echo ${{ steps.date_time.outputs.date_time }}
          echo ${{ steps.date_url.outputs.date_url }}
  
  
  
  
  

  # TODO: Here You Can Build APK, IPA, AAB, etc...
  Build_Android_Apk:
    name: Build Android APK
    needs: [ Get_Info, delete-artifacts ]
    runs-on: ubuntu-latest
    outputs:
      build_apk_path: ${{ steps.build_apk_path.outputs.build_apk_path }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2


      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.13.0
          channel: 'stable'


      - name: Clean Build Folder
        run: flutter clean


      - name: Get Packages Dependencies
        run: flutter pub get


      - name: Build APK
        run: flutter build apk --release --no-tree-shake-icons

      - name: Build Apk Path
        id: build_apk_path
        run: echo build_apk_path=$(find . -name "*.apk" | head -1) >> $GITHUB_OUTPUT

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk



  # TODO: Here You Can Upload APK to Google drive, Transfer, Firebase App Distribution, TestFlight, etc...
  Upload_Apk:
    name: Upload APK
    needs: [ Get_Info, delete-artifacts , Build_Android_Apk ]
    runs-on: ubuntu-latest
    outputs:
      drive_url: ${{ steps.upload_urls.outputs.drive_url }}
      transfer_url: ${{ steps.upload_urls.outputs.transfer_url }}

    steps:
      #   ****************************************************************************************************************
      #   *****************************  Get Drive Folder ID and Upload to Google Drive  *********************************
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Folder ID
        uses: haya14busa/action-cond@v1
        id: folder_id
        with:
          cond: ${{ steps.branch_name.outputs.branch_name == 'master' }}
          if_true: ${{ secrets.MASTER_FOLDER_ID }}
          if_false: ${{ secrets.TEST_FOLDER_ID }}

      - name: Download APK Artifact
        uses: actions/download-artifact@v2
        id: artifact_id
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Archive Files
        run: |
          sudo apt-get update
          sudo apt-get install zip
          zip -r archive.zip * 

      - name: Upload to Google Drive
        id: upload-to-drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: "${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}"
          filename: "build/app/outputs/flutter-apk/app-release.apk"
          folderId: ${{ steps.folder_id.outputs.value }}
          name: ${{ needs.Get_Info.outputs.branch_name }}_apk_${{ needs.Get_Info.outputs.date_time }}.apk
          overwrite: "true"
          mimeType: "application/vnd.android.package-archive"



      #   ******************************************************************************************************************
      #   **************************************** Upload to Transfer.sh  **************************************************

      - name: Upload
        id: upload_apk
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Upload Artifact to Transfer.sh
        id: upload_artifact
        run: |
          UPLOAD_URL=$(curl --upload-file build/app/outputs/flutter-apk/app-release.apk https://transfer.sh/${{ needs.Get_Info.outputs.date_url }}-app-release.apk)
          echo upload_url=$UPLOAD_URL >> $GITHUB_OUTPUT


      - name: echo Upload Urls
        id: upload_urls
        run: |
          echo transfer_url=${{ steps.upload_artifact.outputs.upload_url }} >> $GITHUB_OUTPUT
          echo drive_url=${{ steps.upload-to-drive.outputs.url }} >> $GITHUB_OUTPUT
          echo ${{ steps.upload_artifact.outputs.upload_url }}
          echo ${{ steps.upload-to-drive.outputs.url }}
  
  

  # Todo:: Here You Can Notify Users With Telegram Channel, Email, whatsapp, etc...
  Notify_User:
    name: Notify User
    needs: [ Get_Info, delete-artifacts , Build_Android_Apk , Upload_Apk ]
    runs-on: ubuntu-latest

    steps:

      #   *****************************************************************************************************************
      #   ************************************** Send Link to Telegram Channel  *******************************************


      - name: Notify Telegram Channel
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            🚀 *New APK Build Uploaded* 🚀

            🔔 *Project:* `${{ needs.Get_Info.outputs.project_name }}`

            🤖 *Branch:* `${{ needs.Get_Info.outputs.branch_name }}`

            👤 *Author:* `${{ needs.Get_Info.outputs.commit_author }}`

            📩 *Email:* `${{ needs.Get_Info.outputs.commit_author_email }}`

            📅 `${{ needs.Get_Info.outputs.date_time }}`

            〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️


            🔗 Google Drive Download Url: [Click Here](${{ needs.Upload_Apk.outputs.drive_url }})
            🔗 Transfer Download Url: [Click Here](${{ needs.Upload_Apk.outputs.transfer_url }})

            See you soon 😊
      

      #   *****************************************************************************************************************
      #   ************************************** Send To Gmail Account ***************************************************

      - name: Notify Gmail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          from: ${{ needs.Get_Info.outputs.commit_author_email }}
          to: mazenn770@gmail.com
          subject: "CI 👉🏻 New APK Build Uploaded"
          convert_markdown: true
          body: |
            Dear Sir,

            I hope this email finds you well. I just wanted to let you know that a new APK build has been uploaded to our Google Drive.

            We are pleased to share the following details:

            - Project: ${{ needs.Get_Info.outputs.project_name }}
            - Branch: ${{ needs.Get_Info.outputs.branch_name }}
            - Date: ${{ needs.Get_Info.outputs.date_time }}

            You can download the APK build by clicking on the following link: 
             - 🔗 Google Drive Download Url: [Click Here]( ${{needs.Upload_Apk.outputs.drive_url}})
             - 🔗 Transfer.sh Download Url: [Click Here]( ${{needs.Upload_Apk.outputs.transfer_url}})

            Should you have any questions or require further assistance, please do not hesitate to reach out to us. We value your continued support and look forward to serving you.

            Best regards,

            ${{ needs.Get_Info.outputs.commit_author }}
            Flutter Developer
            IX Solutions Company
            Email: ${{ needs.Get_Info.outputs.commit_author_email }}
        

        #   *****************************************************************************************************************
        #   ************************************** Send To Whatsapp Account ***************************************************
        #      - name: Notify Whatsapp
        #        uses: khaled-ibtikar/whatsapp-push-notify-action@master
        #        id: whatsapp-notify
        #        env:
        #          account_sid: ${{ secrets.TWILIO_ACCOUNT_SID }}
        #          auth_token: ${{ secrets.TWILIO_AUTH_TOKEN }}
        #          to_whatsapp_no: ${{ secrets.WHATSAPP_TO_NUMBER }}
        #          message: "CI 👉🏻 Your message here..."